Learning with a Wasserstein Loss

Charlie Frogner⇤ Chiyuan Zhang⇤
Center for Brains, Minds and Machines
Massachusetts Institute of Technology

frogner@mit.edu, chiyuan@mit.edu

Mauricio Araya-Polo

Shell International E & P, Inc.

Mauricio.Araya@shell.com

Hossein Mobahi

CSAIL

Massachusetts Institute of Technology

hmobahi@csail.mit.edu

Tomaso Poggio

Center for Brains, Minds and Machines
Massachusetts Institute of Technology

tp@ai.mit.edu

Abstract

Learning to predict multi-label outputs is challenging, but in many problems there
is a natural metric on the outputs that can be used to improve predictions. In this
paper we develop a loss function for multi-label learning, based on the Wasserstein
distance. The Wasserstein distance provides a natural notion of dissimilarity for
probability measures. Although optimizing with respect to the exact Wasserstein
distance is costly, recent work has described a regularized approximation that is
efﬁciently computed. We describe an efﬁcient learning algorithm based on this
regularization, as well as a novel extension of the Wasserstein distance from prob-
ability measures to unnormalized measures. We also describe a statistical learning
bound for the loss. The Wasserstein loss can encourage smoothness of the predic-
tions with respect to a chosen metric on the output space. We demonstrate this
property on a real-data tag prediction problem, using the Yahoo Flickr Creative
Commons dataset, outperforming a baseline that doesn’t use the metric.

1

Introduction

We consider the problem of learning to predict a non-negative measure over a ﬁnite set. This prob-
lem includes many common machine learning scenarios. In multiclass classiﬁcation, for example,
one often predicts a vector of scores or probabilities for the classes. And in semantic segmenta-
tion [1], one can model the segmentation as being the support of a measure deﬁned over the pixel
locations. Many problems in which the output of the learning machine is both non-negative and
multi-dimensional might be cast as predicting a measure.
We speciﬁcally focus on problems in which the output space has a natural metric or similarity struc-
ture, which is known (or estimated) a priori. In practice, many learning problems have such struc-
ture. In the ImageNet Large Scale Visual Recognition Challenge [ILSVRC] [2], for example, the
output dimensions correspond to 1000 object categories that have inherent semantic relationships,
some of which are captured in the WordNet hierarchy that accompanies the categories. Similarly, in
the keyword spotting task from the IARPA Babel speech recognition project, the outputs correspond
to keywords that likewise have semantic relationships. In what follows, we will call the similarity
structure on the label space the ground metric or semantic similarity.
Using the ground metric, we can measure prediction performance in a way that is sensitive to re-
lationships between the different output dimensions. For example, confusing dogs with cats might

⇤Authors contributed equally.
1Code and data are available at http://cbcl.mit.edu/wasserstein.

1

Divergence

Wasserstein

e
c
n
a

t
s
D

i

0.3
0.2
0.1
0.0

Divergence

Wasserstein

0.4
0.3
0.2
0.1

e
c
n
a

t
s
D

i

3

4

5

6

7

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

Grid Size

Noise

Figure 2: The Wasserstein loss encourages predictions that are similar to ground truth, robustly
to incorrect labeling of similar classes (see Appendix E.1). Shown is Euclidean distance between
prediction and ground truth vs. (left) number of classes, averaged over different noise levels and
(right) noise level, averaged over number of classes. Baseline is the multiclass logistic loss.

Siberian husky

Eskimo dog

Semantically near-

Figure 1:
equivalent classes in ILSVRC

be more severe an error than confusing breeds of dogs. A loss function that incorporates this metric
might encourage the learning algorithm to favor predictions that are, if not completely accurate, at
least semantically similar to the ground truth.
In this paper, we develop a loss function for multi-label learn-
ing that measures the Wasserstein distance between a prediction
and the target label, with respect to a chosen metric on the out-
put space. The Wasserstein distance is deﬁned as the cost of
the optimal transport plan for moving the mass in the predicted
measure to match that in the target, and has been applied to a
wide range of problems, including barycenter estimation [3], la-
bel propagation [4], and clustering [5]. To our knowledge, this
paper represents the ﬁrst use of the Wasserstein distance as a
loss for supervised learning.
We brieﬂy describe a case in which the Wasserstein loss improves learning performance. The setting
is a multiclass classiﬁcation problem in which label noise arises from confusion of semantically
near-equivalent categories. Figure 1 shows such a case from the ILSVRC, in which the categories
Siberian husky and Eskimo dog are nearly indistinguishable. We synthesize a toy version of this
problem by identifying categories with points in the Euclidean plane and randomly switching the
training labels to nearby classes. The Wasserstein loss yields predictions that are closer to the ground
truth, robustly across all noise levels, as shown in Figure 2. The standard multiclass logistic loss is
the baseline for comparison. Section E.1 in the Appendix describes the experiment in more detail.
The main contributions of this paper are as follows. We formulate the problem of learning with prior
knowledge of the ground metric, and propose the Wasserstein loss as an alternative to traditional
information divergence-based loss functions. Speciﬁcally, we focus on empirical risk minimization
(ERM) with the Wasserstein loss, and describe an efﬁcient learning algorithm based on entropic
regularization of the optimal transport problem. We also describe a novel extension to unnormalized
measures that is similarly efﬁcient to compute. We then justify ERM with the Wasserstein loss
by showing a statistical learning bound. Finally, we evaluate the proposed loss on both synthetic
examples and a real-world image annotation problem, demonstrating beneﬁts for incorporating an
output metric into the loss.

2 Related work

Decomposable loss functions like KL Divergence and `p distances are very popular for probabilis-
tic [1] or vector-valued [6] predictions, as each component can be evaluated independently, often
leading to simple and efﬁcient algorithms. The idea of exploiting smoothness in the label space
according to a prior metric has been explored in many different forms, including regularization [7]
and post-processing with graphical models [8]. Optimal transport provides a natural distance for
probability distributions over metric spaces. In [3, 9], the optimal transport is used to formulate
the Wasserstein barycenter as a probability distribution with minimum total Wasserstein distance
to a set of given points on the probability simplex. [4] propagates histogram values on a graph by
minimizing a Dirichlet energy induced by optimal transport. The Wasserstein distance is also used
to formulate a metric for comparing clusters in [5], and is applied to image retrieval [10], contour

2

matching [11], and many other problems [12, 13]. However, to our knowledge, this is the ﬁrst time
it is used as a loss function in a discriminative learning framework. The closest work to this pa-
per is a theoretical study [14] of an estimator that minimizes the optimal transport cost between the
empirical distribution and the estimated distribution in the setting of statistical parameter estimation.

3 Learning with a Wasserstein loss

3.1 Problem setup and notation
We consider the problem of learning a map from X ⇢ RD into the space Y = RK
+ of measures over
a ﬁnite set K of size |K| = K. Assume K possesses a metric dK(·,·), which is called the ground
metric. dK measures semantic similarity between dimensions of the output, which correspond to
the elements of K. We perform learning over a hypothesis space H of predictors h✓ : X ! Y,
parameterized by ✓ 2 ⇥. These might be linear logistic regression models, for example.
In the standard statistical learning setting, we get an i.i.d. sequence of training examples S =
((x1, y1), . . . , (xN , yN )), sampled from an unknown joint distribution PX⇥Y. Given a measure of
performance (a.k.a. risk) E(·,·), the goal is to ﬁnd the predictor h✓ 2 H that minimizes the expected
risk E[E(h✓(x), y)]. Typically E(·,·) is difﬁcult to optimize directly and the joint distribution PX⇥Y
is unknown, so learning is performed via empirical risk minimization. Speciﬁcally, we solve

min

h✓2H(ˆES[`(h✓(x), y) =

NXi=1
with a loss function `(·,·) acting as a surrogate of E(·,·).
3.2 Optimal transport and the exact Wasserstein loss

1
N

`(h✓(xi), yi))

(1)

Information divergence-based loss functions are widely used in learning with probability-valued out-
puts. Along with other popular measures like Hellinger distance and  2 distance, these divergences
treat the output dimensions independently, ignoring any metric structure on K.
Given a cost function c : K ⇥ K ! R, the optimal transport distance [15] measures the cheapest
way to transport the mass in probability measure µ1 to match that in µ2:

Wc(µ1, µ2) =

c(1, 2) (d1, d2)

(2)

 2⇧(µ1,µ2)ZK⇥K

inf

where ⇧(µ1, µ2) is the set of joint probability measures on K⇥K having µ1 and µ2 as marginals. An
important case is that in which the cost is given by a metric dK(·,·) or its p-th power dp
K(·,·) with p  
1. In this case, (2) is called a Wasserstein distance [16], also known as the earth mover’s distance
[10]. In this paper, we only work with discrete measures. In the case of probability measures, these
are histograms in the simplex  K. When the ground truth y and the output of h both lie in the
simplex  K, we can deﬁne a Wasserstein loss.
Deﬁnition 3.1 (Exact Wasserstein Loss). For any h✓ 2 H, h✓ : X !  K, let h✓(|x) = h✓(x) be
the predicted value at element  2 K, given input x 2 X . Let y() be the ground truth value for 
given by the corresponding label y. Then we deﬁne the exact Wasserstein loss as

where M 2 RK⇥K

+

is the distance matrix M,0 = dp

where 1 is the all-one vector.

⇧(h(x), y) = {T 2 RK⇥K

+

W p

p (h(·|x), y(·)) =

inf

T2⇧(h(x),y)hT, Mi
K(, 0), and the set of valid transport plans is
: T 1 = h(x), T >1 = y}
(4)

(3)

p is the cost of the optimal plan for transporting the predicted mass distribution h(x) to match
W p
the target distribution y. The penalty increases as more mass is transported over longer distances,
according to the ground metric M.

3

Algorithm 1 Gradient of the Wasserstein loss

Given h(x), y,  , K. ( a,  b if h(x), y unnormalized.)
u   1
while u has not converged do

h(x)

h(x) ↵ K y ↵ K>u  
 a +1 ↵✓K y ↵ K>u   b 

u  8><>:
end while
If h(x), y unnormalized: v   y
p /@h(x)  ⇢ log u
@W p

    log u>1
 K 1
 a (1   (diag(u)Kv) ↵ h(x))

 b +1◆  a 
 b +1 ↵ K>u   b 

 b +1

 b 

 a 

 a +1

if h(x), y normalized

if h(x), y unnormalized

if h(x), y normalized
if h(x), y unnormalized

4 Efﬁcient optimization via entropic regularization

To do learning, we optimize the empirical risk minimization functional (1) by gradient descent.
Doing so requires evaluating a descent direction for the loss, with respect to the predictions h(x).
Unfortunately, computing a subgradient of the exact Wasserstein loss (3), is quite costly, as follows.
The exact Wasserstein loss (3) is a linear program and a subgradient of its solution can be computed
using Lagrange duality. The dual LP of (3) is

dW p

p (h(x), y) = sup

↵>h(x) +  >y, CM = {(↵,  ) 2 RK⇥K : ↵ +  0  M,0}.

(5)

↵, 2CM

As (3) is a linear program, at an optimum the values of the dual and the primal are equal (see, e.g.
[17]), hence the dual optimal ↵ is a subgradient of the loss with respect to its ﬁrst argument.
Computing ↵ is costly, as it entails solving a linear program with O(K2) contraints, with K being
the dimension of the output space. This cost can be prohibitive when optimizing by gradient descent.

4.1 Entropic regularization of optimal transport

Cuturi [18] proposes a smoothed transport objective that enables efﬁcient approximation of both the
transport matrix in (3) and the subgradient of the loss. [18] introduces an entropic regularization
term that results in a strictly convex problem:

 W p

p (h(·|x), y(·)) =

inf

T2⇧(h(x),y)hT, Mi  

1
 

H(T ), H(T ) =  X,0

T,0 log T,0.

(6)

Importantly, the transport matrix that solves (6) is a diagonal scaling of a matrix K = e  M 1:

T ⇤ = diag(u)Kdiag(v)

(7)

for u = e ↵ and v = e  , where ↵ and   are the Lagrange dual variables for (6).
Identifying such a matrix subject to equality constraints on the row and column sums is exactly a
matrix balancing problem, which is well-studied in numerical linear algebra and for which efﬁcient
iterative algorithms exist [19]. [18] and [3] use the well-known Sinkhorn-Knopp algorithm.

4.2 Extending smoothed transport to the learning setting

When the output vectors h(x) and y lie in the simplex, (6) can be used directly in place of (3), as
(6) can approximate the exact Wasserstein distance closely for large enough   [18]. In this case, the
    log u>1
gradient ↵ of the objective can be obtained from the optimal scaling vector u as ↵ = log u
 K 1.
1 A Sinkhorn iteration for the gradient is given in Algorithm 1.

1Note that ↵ is only deﬁned up to a constant shift: any upscaling of the vector u can be paired with a
corresponding downscaling of the vector v (and vice versa) without altering the matrix T ⇤. The choice ↵ =
    log u>1
log u

 K 1 ensures that ↵ is tangent to the simplex.

4

(a) Convergence to smoothed trans-
port.

(b) Approximation
Wasserstein.

of

exact

(c) Convergence of alternating pro-
jections (  = 50).

Figure 3: The relaxed transport problem (8) for unnormalized measures.

For many learning problems, however, a normalized output assumption is unnatural. In image seg-
mentation, for example, the target shape is not naturally represented as a histogram. And even when
the prediction and the ground truth are constrained to the simplex, the observed label can be subject
to noise that violates the constraint.
There is more than one way to generalize optimal transport to unnormalized measures, and this is a
subject of active study [20]. We will develop here a novel objective that deals effectively with the
difference in total mass between h(x) and y while still being efﬁcient to optimize.

4.3 Relaxed transport

We propose a novel relaxation that extends smoothed transport to unnormalized measures. By re-
placing the equality constraints on the transport marginals in (6) with soft penalties with respect to
KL divergence, we get an unconstrained approximate transport problem. The resulting objective is:

+

1
 

hT, Mi 

H(T ) +  afKL (T 1kh(x)) +  bfKL T >1ky  (8)
 , a, bWKL(h(·|x), y(·)) = min
T2RK⇥K
where fKL (wkz) = w> log(w ↵ z)   1>w + 1>z is the generalized KL divergence between
+ . Here ↵ represents element-wise division. As with the previous formulation, the optimal
w, z 2 RK
transport matrix with respect to (8) is a diagonal scaling of the matrix K.
Proposition 4.1. The transport matrix T ⇤ optimizing (8) satisﬁes T ⇤ = diag(u)Kdiag(v), where
u = (h(x) ↵ T ⇤1) a , v = y ↵ (T ⇤)>1  b , and K = e  M 1.

And the optimal transport matrix is a ﬁxed point for a Sinkhorn-like iteration. 2
Proposition 4.2. T ⇤ = diag(u)Kdiag(v) optimizing (8) satisﬁes: i) u = h(x)
and ii) v = y

 b +1 , where   represents element-wise multiplication.

 a 

 a +1  (Kv)   a 
 a +1 ,

Unlike the previous formulation, (8) is unconstrained with respect to h(x). The gradient is given by
rh(x)WKL(h(·|x), y(·)) =  a (1   T ⇤1 ↵ h(x)). The iteration is given in Algorithm 1.
When restricted to normalized measures, the relaxed problem (8) approximates smoothed transport
(6). Figure 3a shows, for normalized h(x) and y, the relative distance between the values of (8) and
(6) 3. For   large enough, (8) converges to (6) as  a and  b increase.
(8) also retains two properties of smoothed transport (6). Figure 3b shows that, for normalized
outputs, the relaxed loss converges to the unregularized Wasserstein distance as  ,  a and  b increase
4. And Figure 3c shows that convergence of the iterations in (4.2) is nearly independent of the
dimension K of the output space.

 b 

 b +1   K>u    b 

2Note that, although the iteration suggested by Proposition 4.2 is observed empirically to converge (see

Figure 3c, for example), we have not proven a guarantee that it will do so.

3In ﬁgures 3a-c, h(x), y and M are generated as described in [18] section 5. In 3a-b, h(x) and y have

dimension 256. In 3c, convergence is deﬁned as in [18]. Shaded regions are 95% intervals.

4The unregularized Wasserstein distance was computed using FastEMD [21].

5

y
t
i
l
i

b
a
b
o
r
P

r
o
i
r
e

t
s
o
P

0.20
0.18
0.16
0.14
0.12
0.10
0.08

0
1

2
3

y
t
i
l
i

b
a
b
o
r
P

r
o
i
r
e

t
s
o
P

0.20
0.18
0.16
0.14
0.12
0.10
0.08

2
3
4

5
6

0

1

3

2
p-th norm

4

0

1

3

2
p-th norm

4

(a) Posterior predictions for images of digit 0.

(b) Posterior predictions for images of digit 4.

Figure 4: MNIST example. Each curve shows the predicted probability for one digit, for models
trained with different p values for the ground metric.

5 Statistical Properties of the Wasserstein loss

Let S = ((x1, y1), . . . , (xN , yN )) be i.i.d. samples and hˆ✓ be the empirical risk minimizer

hˆ✓ = argmin

h✓2H (ˆES⇥W p

p (h✓(·|x), y)⇤ =

1
N

NXi=1

p (hx✓(·|xi), yi)) .

W p

2N

(9)

h✓2H

1 (hˆ✓(·|x), y)⇤  inf

Further assume H = s   Ho is the composition of a softmax s and a base hypothesis space Ho of
functions mapping into RK. The softmax layer outputs a prediction that lies in the simplex  K.
Theorem 5.1. For p = 1, and any   > 0, with probability at least 1    , it holds that
1 (h✓(·|x), y)⇤ + 32KCM RN (Ho) + 2CMr log(1/ )
E⇥W 1
E⇥W 1
with the constant CM = max,0 M,0. RN (Ho) is the Rademacher complexity [22] measuring
the complexity of the hypothesis space Ho.
The Rademacher complexity RN (Ho) for commonly used models like neural networks and kernel
machines [22] decays with the training set size. This theorem guarantees that the expected Wasser-
stein loss of the empirical risk minimizer approaches the best achievable loss for H.
As an important special case, minimizing the empirical risk with Wasserstein loss is also good for
multiclass classiﬁcation. Let y =  be the “one-hot” encoded label vector for the groundtruth class.
Proposition 5.2. In the multiclass classiﬁcation setting, for p = 1 and any   > 0, with probability
at least 1    , it holds that
1 (h✓(x), y)] + 32K2CM RN (Ho) + 2CM Kr log(1/ )
Ex,⇥dK(ˆ✓(x), )⇤  inf
where the predictor is ˆ✓(x) = argmax hˆ✓(|x), with hˆ✓ being the empirical risk minimizer.
Note that instead of the classiﬁcation error Ex,[ {ˆ✓(x) 6= }], we actually get a bound on the
expected semantic distance between the prediction and the groundtruth.

KE[W 1

h✓2H

(10)

2N

6 Empirical study

6.1

Impact of the ground metric

In this section, we show that the Wasserstein loss encourages smoothness with respect to an artiﬁcial
metric on the MNIST handwritten digit dataset. This is a multi-class classiﬁcation problem with
output dimensions corresponding to the 10 digits, and we apply a ground metric dp(, 0) = |  
0|p, where , 0 2 {0, . . . , 9} and p 2 [0,1). This metric encourages the recognized digit to be
numerically close to the true one. We train a model independently for each value of p and plot the
average predicted probabilities of the different digits on the test set in Figure 4.

6

1.00

0.95

0.90

0.85

0.80

0.75

0.70

t
s
o
C
K
-
p
o

t

1.00

0.95

0.90

0.85

0.80

0.75

0.70

t
s
o
C
K
-
p
o

t

Loss Function
Divergence
Wasserstein (↵=0.5)
Wasserstein (↵=0.3)
Wasserstein (↵=0.1)

Loss Function
Divergence
Wasserstein (↵=0.5)
Wasserstein (↵=0.3)
Wasserstein (↵=0.1)

5

10

15
K (# of proposed tags)

20

5

10

15
K (# of proposed tags)

20

(a) Original Flickr tags dataset.

(b) Reduced-redundancy Flickr tags dataset.

Figure 5: Top-K cost comparison of the proposed loss (Wasserstein) and the baseline (Divergence).
Note that as p ! 0, the metric approaches the 0   1 metric d0(, 0) = 6=0, which treats all
incorrect digits as being equally unfavorable. In this case, as can be seen in the ﬁgure, the predicted
probability of the true digit goes to 1 while the probability for all other digits goes to 0. As p
increases, the predictions become more evenly distributed over the neighboring digits, converging
to a uniform distribution as p ! 1 5.
6.2 Flickr tag prediction

deﬁned as CK = 1/KPK

We apply the Wasserstein loss to a real world multi-label learning problem, using the recently re-
leased Yahoo/Flickr Creative Commons 100M dataset [23]. 6 Our goal is tag prediction: we select
1000 descriptive tags along with two random sets of 10,000 images each, associated with these tags,
for training and testing. We derive a distance metric between tags by using word2vec [24] to
embed the tags as unit vectors, then taking their Euclidean distances. To extract image features we
use MatConvNet [25]. Note that the set of tags is highly redundant and often many semantically
equivalent or similar tags can apply to an image. The images are also partially tagged, as different
users may prefer different tags. We therefore measure the prediction performance by the top-K cost,
k=1 minj dK(ˆk, j), where {j} is the set of groundtruth tags, and {ˆk}
are the tags with highest predicted probability. The standard AUC measure is also reported.
We ﬁnd that a linear combination of the Wasserstein loss W p
p and the standard multiclass logistic loss
KL yields the best prediction results. Speciﬁcally, we train a linear model by minimizing W p
p + ↵KL
on the training set, where ↵ controls the relative weight of KL. Note that KL taken alone is our
baseline in these experiments. Figure 5a shows the top-K cost on the test set for the combined loss
and the baseline KL loss. We additionally create a second dataset by removing redundant labels
from the original dataset: this simulates the potentially more difﬁcult case in which a single user
tags each image, by selecting one tag to apply from amongst each cluster of applicable, semantically
similar tags. Figure 3b shows that performance for both algorithms decreases on the harder dataset,
while the combined Wasserstein loss continues to outperform the baseline.
In Figure 6, we show the effect on performance of varying the weight ↵ on the KL loss. We observe
that the optimum of the top-K cost is achieved when the Wasserstein loss is weighted more heavily
than at the optimum of the AUC. This is consistent with a semantic smoothing effect of Wasserstein,
which during training will favor mispredictions that are semantically similar to the ground truth,
sometimes at the cost of lower AUC 7. We ﬁnally show two selected images from the test set in
Figure 7. These illustrate cases in which both algorithms make predictions that are semantically
relevant, despite overlapping very little with the ground truth. The image on the left shows errors
made by both algorithms. More examples can be found in the appendix.

5To avoid numerical issues, we scale down the ground metric such that all of the distance values are in the

interval [0, 1).

6The dataset used here is available at http://cbcl.mit.edu/wasserstein.
7The Wasserstein loss can achieve a similar trade-off by choosing the metric parameter p, as discussed in
Section 6.1. However, the relationship between p and the smoothing behavior is complex and it can be simpler
to implement the trade-off by combining with the KL loss.

7

t
s
o
c
K
-
p
o
T

C
U
A

0.95
0.90
0.85
0.80
0.75
0.70
0.65

0.64
0.62
0.60
0.58
0.56
0.54

K = 1

K = 2

K = 3

K = 4

0.0

0.5

1.0

1.5

2.0

Wasserstein AUC
Divergence AUC

t
s
o
c
K
-
p
o
T

C
U
A

0.95
0.90
0.85
0.80
0.75
0.70
0.65

0.64
0.62
0.60
0.58
0.56
0.54

K = 1

K = 2

K = 3

K = 4

0.0

0.5

1.0

1.5

2.0

Wasserstein AUC
Divergence AUC

0.0

0.5

1.0
↵

1.5

2.0

0.0

0.5

1.0
↵

1.5

2.0

(a) Original Flickr tags dataset.

(b) Reduced-redundancy Flickr tags dataset.

Figure 6: Trade-off between semantic smoothness and maximum likelihood.

(a) Flickr user tags: street, parade, dragon; our
proposals: people, protest, parade; baseline pro-
posals: music, car, band.

(b) Flickr user tags: water, boat, reﬂection, sun-
shine; our proposals: water, river, lake, summer;
baseline proposals: river, water, club, nature.

Figure 7: Examples of images in the Flickr dataset. We show the groundtruth tags and as well as
tags proposed by our algorithm and the baseline.

7 Conclusions and future work

In this paper we have described a loss function for learning to predict a non-negative measure over a
ﬁnite set, based on the Wasserstein distance. Although optimizing with respect to the exact Wasser-
stein loss is computationally costly, an approximation based on entropic regularization is efﬁciently
computed. We described a learning algorithm based on this regularization and we proposed a novel
extension of the regularized loss to unnormalized measures that preserves its efﬁciency. We also
described a statistical learning bound for the loss. The Wasserstein loss can encourage smoothness
of the predictions with respect to a chosen metric on the output space, and we demonstrated this
property on a real-data tag prediction problem, showing improved performance over a baseline that
doesn’t incorporate the metric.
An interesting direction for future work may be to explore the connection between the Wasserstein
loss and Markov random ﬁelds, as the latter are often used to encourage smoothness of predictions,
via inference at prediction time.

8

References
[1] Jonathan Long, Evan Shelhamer, and Trevor Darrell. Fully convolutional networks for semantic segmen-

tation. CVPR (to appear), 2015.

[2] Olga Russakovsky, Jia Deng, Hao Su, Jonathan Krause, Sanjeev Satheesh, Sean Ma, Zhiheng Huang,
Andrej Karpathy, Aditya Khosla, Michael Bernstein, Alexander C. Berg, and Li Fei-Fei. ImageNet Large
Scale Visual Recognition Challenge. International Journal of Computer Vision (IJCV), 2015.

[3] Marco Cuturi and Arnaud Doucet. Fast Computation of Wasserstein Barycenters. ICML, 2014.
[4] Justin Solomon, Raif M Rustamov, Leonidas J Guibas, and Adrian Butscher. Wasserstein Propagation for

Semi-Supervised Learning. In ICML, pages 306–314, 2014.

[5] Michael H Coen, M Hidayath Ansari, and Nathanael Fillmore. Comparing Clusterings in Space. ICML,

pages 231–238, 2010.

[6] Lorenzo Rosasco Mauricio A. Alvarez and Neil D. Lawrence. Kernels for vector-valued functions: A

review. Foundations and Trends in Machine Learning, 4(3):195–266, 2011.

[7] Leonid I Rudin, Stanley Osher, and Emad Fatemi. Nonlinear total variation based noise removal algo-

rithms. Physica D: Nonlinear Phenomena, 60(1):259–268, 1992.

[8] Liang-Chieh Chen, George Papandreou, Iasonas Kokkinos, Kevin Murphy, and Alan L Yuille. Semantic

image segmentation with deep convolutional nets and fully connected crfs. In ICLR, 2015.

[9] Marco Cuturi, Gabriel Peyr´e, and Antoine Rolet. A Smoothed Dual Approach for Variational Wasserstein

Problems. arXiv.org, March 2015.

[10] Yossi Rubner, Carlo Tomasi, and Leonidas J Guibas. The earth mover’s distance as a metric for image

retrieval. IJCV, 40(2):99–121, 2000.

[11] Kristen Grauman and Trevor Darrell. Fast contour matching using approximate earth mover’s distance.

In CVPR, 2004.

[12] S Shirdhonkar and D W Jacobs. Approximate earth mover’s distance in linear time. In CVPR, 2008.
[13] Herbert Edelsbrunner and Dmitriy Morozov. Persistent homology: Theory and practice. In Proceedings

of the European Congress of Mathematics, 2012.

[14] Federico Bassetti, Antonella Bodini, and Eugenio Regazzini. On minimum kantorovich distance estima-

tors. Stat. Probab. Lett., 76(12):1298–1302, 1 July 2006.

[15] C´edric Villani. Optimal Transport: Old and New. Springer Berlin Heidelberg, 2008.
[16] Vladimir I Bogachev and Aleksandr V Kolesnikov. The Monge-Kantorovich problem: achievements,

connections, and perspectives. Russian Math. Surveys, 67(5):785, 10 2012.

[17] Dimitris Bertsimas, John N. Tsitsiklis, and John Tsitsiklis. Introduction to Linear Optimization. Athena

Scientiﬁc, Boston, third printing edition, 1997.

[18] Marco Cuturi. Sinkhorn Distances: Lightspeed Computation of Optimal Transport. NIPS, 2013.
[19] Philip A Knight and Daniel Ruiz. A fast algorithm for matrix balancing.

IMA Journal of Numerical

Analysis, 33(3):drs019–1047, October 2012.

[20] Lenaic Chizat, Gabriel Peyr´e, Bernhard Schmitzer, and Franc¸ois-Xavier Vialard. Unbalanced Optimal

Transport: Geometry and Kantorovich Formulation. arXiv.org, August 2015.

[21] Oﬁr Pele and Michael Werman. Fast and robust Earth Mover’s Distances. ICCV, pages 460–467, 2009.
[22] Peter L Bartlett and Shahar Mendelson. Rademacher and gaussian complexities: Risk bounds and struc-

tural results. JMLR, 3:463–482, March 2003.

[23] Bart Thomee, David A. Shamma, Gerald Friedland, Benjamin Elizalde, Karl Ni, Douglas Poland,
Damian Borth, and Li-Jia Li. The new data and new challenges in multimedia research. arXiv preprint
arXiv:1503.01817, 2015.

[24] Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Corrado, and Jeff Dean. Distributed representations of

words and phrases and their compositionality. In NIPS, 2013.

[25] A. Vedaldi and K. Lenc. MatConvNet – Convolutional Neural Networks for MATLAB. CoRR,

abs/1412.4564, 2014.

[26] M. Ledoux and M. Talagrand. Probability in Banach Spaces: Isoperimetry and Processes. Classics in

Mathematics. Springer Berlin Heidelberg, 2011.

[27] Clark R. Givens and Rae Michael Shortt. A class of wasserstein metrics for probability distributions.

Michigan Math. J., 31(2):231–240, 1984.

9

