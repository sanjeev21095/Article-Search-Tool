Robust Gaussian Graphical Modeling with the

Trimmed Graphical Lasso

Eunho Yang

IBM T.J. Watson Research Center

eunhyang@us.ibm.com

Aur´elie C. Lozano

IBM T.J. Watson Research Center

aclozano@us.ibm.com

Abstract

Gaussian Graphical Models (GGMs) are popular tools for studying network struc-
tures. However, many modern applications such as gene network discovery and
social interactions analysis often involve high-dimensional noisy data with out-
liers or heavier tails than the Gaussian distribution. In this paper, we propose the
Trimmed Graphical Lasso for robust estimation of sparse GGMs. Our method
guards against outliers by an implicit trimming mechanism akin to the popular
Least Trimmed Squares method used for linear regression. We provide a rigorous
statistical analysis of our estimator in the high-dimensional setting. In contrast,
existing approaches for robust sparse GGMs estimation lack statistical guaran-
tees. Our theoretical results are complemented by experiments on simulated and
real gene expression data which further demonstrate the value of our approach.

1

Introduction

Gaussian graphical models (GGMs) form a powerful class of statistical models for representing dis-
tributions over a set of variables [1]. These models employ undirected graphs to encode conditional
independence assumptions among the variables, which is particularly convenient for exploring net-
work structures. GGMs are widely used in variety of domains, including computational biology [2],
natural language processing [3], image processing [4, 5, 6], statistical physics [7], and spatial statis-
tics [8]. In many modern applications, the number of variables p can exceed the number of obser-
vations n. For instance, the number of genes in microarray data is typically larger than the sample
size. In such high-dimensional settings, sparsity constraints are particularly pertinent for estimat-
ing GGMs, as they encourage only a few parameters to be non-zero and induce graphs with few
edges. The most widely used estimator among others (see e.g. [9]) minimizes the Gaussian negative
log-likelihood regularized by the (cid:96)1 norm of the entries (or the off-diagonal entries) of the precision
matrix (see [10, 11, 12]). This estimator enjoys strong statistical guarantees (see e.g. [13]). The
corresponding optimization problem is a log-determinant program that can be solved with interior
point methods [14] or by co-ordinate descent algorithms [11, 12]. Alternatively neighborhood se-
lection [15, 16] can be employed to estimate conditional independence relationships separately for
each node in the graph, via Lasso linear regression, [17]. Under certain assumptions, the sparse
GGM structure can still be recovered even under high-dimensional settings.
The aforementioned approaches rest on a fundamental assumption: the multivariate normality of the
observations. However, outliers and corruption are frequently encountered in high-dimensional data
(see e.g. [18] for gene expression data). Contamination of a few observations can drastically affect
the quality of model estimation. It is therefore imperative to devise procedures that can cope with
observations deviating from the model assumption. Despite this fact, little attention has been paid to
robust estimation of high-dimensional graphical models. Relevant work includes [19], which lever-
ages multivariate t-distributions for robustiﬁed inference and the EM algorithm. They also propose
an alternative t-model which adds ﬂexibility to the classical t but requires the use of Monte Carlo
EM or variational approximation as the likelihood function is not available explicitly. Another per-

1

tinent work is that of [20] which introduces a robustiﬁed likelihood function. A two-stage procedure
is proposed for model estimation, where the graphical structure is ﬁrst obtained via coordinate gra-
dient descent and the concentration matrix coefﬁcients are subsequently re-estimated using iterative
proportional ﬁtting so as to guarantee positive deﬁniteness of the ﬁnal estimate.
In this paper, we propose the Trimmed Graphical Lasso method for robust Gaussian graphical mod-
eling in the sparse high-dimensional setting. Our approach is inspired by the classical Least Trimmed
Squares method used for robust linear regression [21], in the sense that it disregards the observations
that are judged less reliable. More speciﬁcally the Trimmed Graphical Lasso seeks to minimize a
weighted version of the negative log-likelihood regularized by the (cid:96)1 penalty on the concentration
matrix for the GGM and under some simple constraints on the weights. These weights implicitly
induce the trimming of certain observations. Our key contributions can be summarized as follows.
• We introduce the Trimmed Graphical Lasso formulation, along with two strategies for solv-
ing the objective. One involves solving a series of graphical lasso problems; the other is
more efﬁcient and leverages composite gradient descent in conjunction with partial opti-
mization.
• As our key theoretical contribution, we provide statistical guarantees on the consistency of
our estimator. To the best of our knowledge, this is in stark contrast with prior work on
robust sparse GGM estimation (e.g. [19, 20]) which do not provide any statistical analysis.
• Experimental results under various data corruption scenarios further demonstrate the value

of our approach.

2 Problem Setup and Robust Gaussian Graphical Models

(cid:107)U(cid:107)1,off :=(cid:80)

For matrices U ∈ Rp×p and V ∈ Rp×p, (cid:104)(cid:104)U, V (cid:105)(cid:105) denotes the trace inner product
Notation.
tr(A BT ). For a matrix U ∈ Rp×p and parameter a ∈ [1,∞], (cid:107)U(cid:107)a denotes the element-wise
(cid:96)a norm, and (cid:107)U(cid:107)a,off does the element-wise (cid:96)a norm only for off-diagonal entries. For example,
i(cid:54)=j |Uij|. Finally, we use (cid:107)U(cid:107)F and |||U|||2 to denote the Frobenius and spectral norms,
respectively.
Setup. Let X = (X1, X2, . . . , Xp) be a zero-mean Gaussian random ﬁeld parameterized by p × p
concentration matrix Θ∗:

P(X; Θ∗) = exp

(cid:104)(cid:104)Θ∗, XX(cid:62)(cid:105)(cid:105) − A(Θ∗)

(1)
where A(Θ∗) is the log-partition function of Gaussian random ﬁeld. Here, the probability density
function in (1) is associated with p-variate Gaussian distribution, N (0, Σ∗) where Σ∗ = (Θ∗)−1.

Given n i.i.d. samples(cid:8)X (1), . . . , X (n)(cid:9) from high-dimensional Gaussian random ﬁeld (1), the

standard way to estimate the inverse covariance matrix is to solve the (cid:96)1 regularized maximum like-
lihood estimator (MLE) that can be written as the following regularized log-determinant program:

2

(cid:16) − 1

(cid:17)

(cid:68)(cid:68)

n(cid:88)

i=1

1
n

minimize

Θ∈Ω

Θ,

X (i)(X (i))(cid:62)(cid:69)(cid:69) − log det(Θ) + λ(cid:107)Θ(cid:107)1,off

(2)

where Ω is the space of the symmetric positive deﬁnite matrices, and λ is a regularization parameter
that encourages a sparse graph model structure.
In this paper, we consider the case where the number of random variables p may be substantially
larger than the number of sample size n, however, the concentration parameter of the underlying
distribution is sparse:
(C-1) The number of non-zero off-diagonal entries of Θ∗ is at most k, that is |{Θ∗
0 for i (cid:54)= j}| ≤ k.
Now, suppose that n samples are drawn from this underlying distribution (1) with true parameter
Θ∗. We further allow some samples are corrupted and not drawn from (1). Speciﬁcally, the set of
sample indices {1, 2, . . . , n} is separated into two disjoint subsets: if i-th sample is in the set of
“good” samples, which we name G, then it is a genuine sample from (1) with the parameter Θ∗. On

ij (cid:54)=

: Θ∗

ij

2

Algorithm 1 Trimmed Graphical Lasso in (3)

Initialize Θ(0) (e.g. Θ(0) = (S + λI)−1)
repeat

i=1 w(t)

h

(cid:80)n

i X (i)(X (i))(cid:62) − (Θ(t−1))−1

Compute w(t) given Θ(t−1), by assigning a weight of one to the h observations with lowest negative
log-likelihood and a weight of zero to the remaining ones.
∇L(t) ← 1
Line search. Choose η(t) (See Nesterov (2007) for a discussion of how the stepsize may be chosen),
checking that the following update maintains positive deﬁniteness. This can be veriﬁed via Cholesky
factorization (as in [23]).
Update. Θ(t) ← Sη(t)λ(Θ(t−1) − η(t)∇L(t)), where S is the soft-thresholding operator: [Sν (U )]i,j =
sign(Ui,j) max(|Ui,j| − ν, 0) and is only applied to the off-diagonal elements of matrix U.
Compute (Θ(t))−1 reusing the Cholesky factor.

until stopping criterion is satisﬁed

the other hand, if the i-th sample is in the set of “bad” samples, B, the sample is corrupted. The
identiﬁcations of G and B are hidden to us. However, we naturally assume that only a small number
of samples are corrupted:
(C-2) Let h be the number of good samples: h := |G| and hence |B| = n − h. Then, we assume
that larger portion of samples are genuine and uncorrupted so that |G|−|B|
|G| ≥ α where 0 < α ≤ 1.
If we assume that 40% of samples are corrupted, then α = 0.6n−0.4n
3.
0.6n = 1

In later sections, we will derive a robust estimator for corrupted samples of sparse Gaussian graphical
models and provide statistical guarantees of our estimator under the conditions (C-1) and (C-2).

2.1 Trimmed Graphical Lasso

We now propose a Trimmed Graphical Lasso for robust estimation of sparse GGMs:

wiX (i)(X (i))(cid:62)(cid:69)(cid:69) − log det(Θ) + λ(cid:107)Θ(cid:107)1,off

(cid:68)(cid:68)

n(cid:88)

i=1

minimize

Θ∈Ω,w

Θ,

1
h

s. t. w ∈ [0, 1]n , 1(cid:62)w = h , (cid:107)Θ(cid:107)1 ≤ R

(3)

where λ is a regularization parameter to decide the sparsity of our estimation, and h is another
parameter, which decides the number of samples (or sum of weights) used in the training. h is
ideally set as the number of uncorrupted samples in G, but practically we can tune the parameter h by
cross-validation. Here, the constraint (cid:107)Θ(cid:107)1 ≤ R is required to analyze this non-convex optimization
problem as discussed in [22]. For another tuning parameter R, any positive real value would be
sufﬁcient for R as long as (cid:107)Θ∗(cid:107)1 ≤ R. Finally note that when h is ﬁxed as n (and R is set as
inﬁnity), the optimization problem (3) will be simply reduced to the vanilla (cid:96)1 regularized MLE for
sparse GGM without concerning outliers.
The optimization problem (3) is convex in w as well as in Θ, however this is not the case jointly.
Nevertheless, we will show later that any local optimum of (3) is guaranteed to be strongly consistent
under some fairly mild conditions.

Optimization As we brieﬂy discussed above, the problem (3) is not jointly convex but biconvex.
One possible approach to solve the objective of (3) thus is to alternate between solving for Θ with
ﬁxed w and solving for w with ﬁxed Θ. Given Θ, solving for w is straightforward and boils down to
assigning a weight of one to the h observations with lowest negative log-likelihood and a weight of
zero to the remaining ones. Given w, solving for Θ can be accomplished by any algorithm solving
the “vanilla” graphical Lasso program, e.g. [11, 12]. Each step solves a convex problem hence the
objective is guaranteed to decrease at each iteration and will converge to a local minima.
A more efﬁcient optimization approach can be obtained by adopting a partial minimization strategy
for Θ: rather than solving to completion for Θ each time w is updated, one performs a single
step update. This approach stems from considering the following equivalent reformulation of our

3

objective:

minimize

Θ∈Ω

(cid:68)(cid:68)

Θ,

n(cid:88)

i=1

1
h

wi(Θ)X (i)(X (i))(cid:62)(cid:69)(cid:69) − log det(Θ) + λ(cid:107)Θ(cid:107)1,off
wiX (i)(X (i))(cid:62)(cid:69)(cid:69)

n(cid:88)

(cid:68)(cid:68)

argmin

Θ,

1
h

i=1

s. t. wi(Θ) =

w∈[0,1]n , 1(cid:62)w=h

(4)

, (cid:107)Θ(cid:107)1 ≤ R ,

On can then leverage standard ﬁrst-order methods such as projected and composite gradient descent
[24] that will converge to local optima. The overall procedure is depicted in Algorithm 1. Therein we
assume that we pick R sufﬁciently large, so one does not need to enforce the constraint (cid:107)Θ(cid:107)1 ≤ R
explicitly. If needed the constraint can be enforced by an additional projection step [22].

3 Statistical Guarantees of Trimmed Graphical Lasso

One of the main contributions of this paper is to provide the statistical guarantees of our Trimmed
Graphical Lasso estimator for GGMs. The optimization problem (3) is non-convex, and therefore
the gradient-type methods solving (3) will ﬁnd estimators by local minima. Hence, our theory in this
section provides the statistical error bounds on any local minimum measured by (cid:107) · (cid:107)F and (cid:107) · (cid:107)1,off
norms simultaneously.

Suppose that we have some local optimum ((cid:101)Θ,(cid:101)w) of (3) by arbitrary gradient-based method. While
to (cid:101)wi so that w∗
dependent on (cid:101)w.

i − (cid:101)wi = 0. Otherwise for a sample index i ∈ B, we set w∗

Θ∗ is ﬁxed unconditionally, we deﬁne w∗ as follows: for a sample index i ∈ G, w∗

i is simply set
i = 0. Hence, w∗ is

In order to derive the upper bound on the Frobenius norm error, we ﬁrst need to assume the standard
restricted strong convexity condition of (3) with respective to the parameter Θ:

(C-3) (Restricted strong convexity condition) Let ∆ be an arbitrary error of parameter Θ. That
is, ∆ := Θ − Θ∗. Then, for any possible error ∆ such that (cid:107)∆(cid:107)F ≤ 1,

(cid:68)(cid:68)(cid:0)Θ∗(cid:1)−1 −(cid:0)Θ∗ + ∆(cid:1)−1

, ∆

(cid:69)(cid:69) ≥ κl(cid:107)∆(cid:107)2

F

(5)

where κl is a curvature parameter.

Note that in order to guarantee the Frobenius norm-based error bounds, (C-3) is required even for the
vanilla Gaussian graphical models without outliers, which has been well studied by several works
such as the following lemma:
Lemma 1 (Section B.4 of [22]). For any ∆ ∈ Rp×p such that (cid:107)∆(cid:107)F ≤ 1,

(cid:69)(cid:69) ≥(cid:0)|||Θ∗|||2 + 1(cid:1)−2(cid:107)∆(cid:107)2

F ,

, ∆

(cid:68)(cid:68)(cid:0)Θ∗(cid:1)−1 −(cid:0)Θ∗ + ∆(cid:1)−1
thus (C-3) holds with κl =(cid:0)|||Θ∗|||2 + 1(cid:1)−2.

While (C-3) is a standard condition that is also imposed for the conventional estimators under clean
set of of samples, we additionally require the following condition for a successful estimation of (3)
on corrupted samples:

(C-4) Consider arbitrary local optimum ((cid:101)Θ,(cid:101)w). Let (cid:101)∆ := (cid:101)Θ − Θ∗ and(cid:101)Γ := (cid:101)w − w∗. Then,

(cid:101)ΓiX (i)(X (i))(cid:62), (cid:101)∆

(cid:69)(cid:69)(cid:12)(cid:12)(cid:12) ≤ τ1(n, p)(cid:107)(cid:101)∆(cid:107)F + τ2(n, p)(cid:107)(cid:101)∆(cid:107)1

(cid:12)(cid:12)(cid:12)(cid:68)(cid:68) 1

h

n(cid:88)

i=1

with some positive quantities τ1(n, p) and τ2(n, p) on n and p. These will be speciﬁed below for
some concrete examples.

(C-4) can be understood as a structural incoherence condition between the model parameter Θ and
the weight parameter w. Such a condition is usually imposed when analyzing estimators with mul-
tiple parameters (for example, see [25] for a robust linear regression estimator). Since w∗ is deﬁned

4

h

i=1

w∗

4 max

n(cid:88)

(cid:40)(cid:13)(cid:13)(cid:13) 1

≤ λ ≤ κl − τ1(n, p)

regularization parameter λ in (3) is set such that

under some reasonable cases, this condition for any local optimum holds with high probability. Also
all i ∈ {1, . . . , n} and hence the LHS becomes 0.
Armed with these conditions, we now state our main theorem on the error bounds of our estimator
(3):

depending on (cid:101)w, each local optimum has its own (C-4) condition. We will see in the sequel that
note that for the case with clean samples, the condition (C-4) is trivially satisﬁed since(cid:101)Γi = 0 for
Theorem 1. Consider corrupted Gaussian graphical models. Let ((cid:101)Θ,(cid:101)w) be an any local opti-
mum of M-estimator (3). Suppose that ((cid:101)Θ,(cid:101)w) satisﬁes the condition (C-4). Suppose also that the

Then, this local optimum ((cid:101)Θ,(cid:101)w) is guaranteed to be consistent as follows:
(cid:17)
(cid:17)2
3λ(cid:112)k + p + τ1(n, p)

(cid:41)
i X (i)(X (i))(cid:62) − (Θ∗)−1(cid:13)(cid:13)(cid:13)∞ , τ2(n, p)
(cid:16) 3λ
(cid:107)(cid:101)Θ − Θ∗(cid:107)F ≤ 1
(cid:16)
(cid:107)(cid:101)Θ − Θ∗(cid:107)1,off ≤ 2
i=1 wiX (i)(X (i))(cid:62)(cid:11)(cid:11) − log det(Θ),
(cid:80)n

The statement in Theorem 1 holds deterministically, and the probabilistic statement comes where

we show (C-4) and (6) for a given ((cid:101)Θ,(cid:101)w) are satisﬁed. Note that, deﬁning L(Θ, w(cid:1) :=
(cid:10)(cid:10)Θ, 1
(cid:107)∇ΘL(cid:0)Θ∗, w∗(cid:1)(cid:107)∞ (see [26], for details). Also it is important to note that the term

is a standard way of choosing λ based on
k + p captures
the relation between element-wise (cid:96)1 norm and the error norm (cid:107)·(cid:107)F including diagonal entries. Due
to the space limit, the proof of Theorem 1 (and all other proofs) are provided in the Supplements
[27].
Now, it is natural to ask how easily we can satisfy the conditions in Theorem 1. Intuitively it is
impossible to recover true parameter by weighting approach as in (3) when the amount of corruptions
exceeds that of normal observation errors.
To this end, suppose that we have some upper bound on the corruptions:

.

(6)

(7)

k + p
2

+ τ1(n, p)

(C-B1) For some function f (·), we have(cid:0)|||X B|||2

(cid:1)2 ≤ f (X B)

h log p

λ κl

and

.

√

√

√

3R

κl

it

h

where X B denotes the sub-design matrix in R|B|×p corresponding to outliers. Under this assump-
tion, we can properly choose the regularization parameter λ satisfying (6) as follows:
Corollary 1. Consider corrupted Gaussian graphical models with conditions (C-2) and (C-B1).
Suppose that we choose the regularization parameter

λ = 4 max

8(max

i

Σ∗
ii)

10τ log p
h − |B| +

|B|
h

(cid:107)Σ∗(cid:107)∞ , f (X B)

log p

h

≤ κl − f (X B)

3R

(cid:40)

(cid:115)

(cid:114)

(cid:41)

(cid:113)|B| log p

h

.

Then, any local optimum of (3) is guaranteed to satisfy (C-4) and have the error bounds in (7) with
probability at least 1 − c1 exp(−c(cid:48)
If we further assume the number of corrupted samples scales with
√
(C-B2) |B| ≤ a

1hλ2) for some universal positive constants c1 and c(cid:48)
1.

n for some constant a ≥ 0,

n at most :

√

then we can derive the following result as another corollary of Theorem 1:
Corollary 2. Consider corrupted Gaussian graphical models. Suppose that the conditions (C-
2), (C-B1) and (C-B2) hold. Also suppose that the regularization parameter λ is set as c

(cid:113) log p
2f (X B)(cid:9). Then, if the sample size n is lower

where c := 4 max(cid:8)16(maxi Σ∗

5τ + 2a(cid:107)Σ∗(cid:107)∞

√

√

√

n

,

ii)

log p

5

bounded as

(cid:26)

16a2 ,(cid:0)|||Θ∗|||2 + 1(cid:1)4(cid:16)

n ≥ max

(cid:32)

(cid:114)

(cid:107)(cid:101)Θ − Θ∗(cid:107)F ≤ 1

3Rc + f (X B)(cid:112)2|B|(cid:17)2
(cid:114)

2|B| log p

(log p)

,

(cid:27)
(cid:33)

then any local optimum of (3) is guaranteed to satisfy (C-4) and have the following error bound:

n

κl

(8)

+ f (X B)

(k + p) log p

3c
2
with probability at least 1 − c1 exp(−c(cid:48)
1hλ2) for some universal positive constants c1 and c(cid:48)
1.
Note that the (cid:107) · (cid:107)1,off norm based error bound also can be easily derived using the selection of λ
√
n) samples out of total n samples
from (7). Corollary 2 reveals an interesting result: even when O(
are corrupted, our estimator (3) can successfully recover the true parameter with guaranteed error
in (8). The ﬁrst term in this bound is O
which exactly recovers the Frobenius error
bound for the case without outliers (see [13, 22] for example). Due to the outliers, we have the
performance degrade with the second term, which is O
. To the best of our knowledge,
this is the ﬁrst statistical error bounds on the parameter estimation for Gaussian graphical models
with outliers. Also note that Corollary 1 only concerns on any local optimal point derived by an
arbitrary optimization algorithm. For the guarantees of multiple local optima simultaneously, we
may use a union bound from the corollary.

(cid:17)
(cid:16)(cid:113)|B| log p

(cid:16)(cid:113) (k+p) log p

(cid:17)

n

n

n

When Outliers Follow a Gaussian Graphical Model Now let us provide a concrete example and
show how f (X B) in (C-B1) is precisely speciﬁed in this case:

(C-B3) Outliers in the set B are drawn from another Gaussian graphical model (1) with a param-
eter (ΣB)−1.
This can be understood as the Gaussian mixture model where the most of the samples are drawn
from (Θ∗)−1 that we want to estimate, and small portion of samples are drawn from ΣB. In this
case, Corollary 2 can be further shaped as follows:
Corollary 3. Suppose that the conditions (C-2), (C-B2) and (C-B3) hold. Then the statement in

2a(cid:0)1+

√
4

log p(cid:1)2|||ΣB|||2

√
√

.

log p

Corollary 2 holds with f (X B) :=

4 Experiments

In this section we corroborate the performance of our Trimmed Graphical Lasso (trim-glasso) algo-
rithm on simulated data. We compare against glasso: the vanilla Graphical Lasso [11]; the t-Lasso
and t*-lasso methods [19], and robust-LL: the robustiﬁed-likelihood approach of [20].

4.1 Simulated data

Our simulation setup is similar to [20] and is a akin to gene regulatory networks. Namely we con-
sider four different scenarios where the outliers are generated from models with different graphical
structures. Speciﬁcally, each sample is generated from the following mixture distribution:

yk ∼ (1 − p0)Np(0, Θ−1) +

Np(−µ, Θ−1

o ) +

p0
2

p0
2

Np(µ, Θ−1

o ), k = 1, . . . , n,

where po = 0.1, n = 100, and p = 150. Four different outlier distributions are considered:

M1: µ = (1, . . . , 1)T , Θo = ˜Θ, M2: µ = (1.5, . . . , 1.5)T , Θo = ˜Θ,
M3: µ = (1, . . . , 1)T , Θo = Ip, M4: µ = (1.5, . . . , 1.5)T , Θo = Ip.

We also consider the scenario where the outliers are not symmetric about the mean and simulate
data from the following model

6

(a) M1

(b) M2

(c) M3

(d) M4

Figure 1: Average ROC curves for the comparison methods for contamination scenarios M1-M4.

M5: yk ∼ (1 − po)Np(0, Θ−1) + poNp(2, Ip), k = 1, . . . , n.

For each simulation run, Θ is a randomly generated precision matrix corresponding to a network
with 9 hub nodes simulated as follows. Let A be the adjacency of the network. For all i < j we set
Aij = 1 with probability 0.03, and zero otherwise. We set Aji = Aij. We then randomly select 9
hub nodes and set the elements of the corresponding rows and columns of A to one with probability
0.4 and zero otherwise. Using A, the simulated nonzero coefﬁcients of the precision matrix are
sampled as follows. First we create a matrix E so that Ei,j = 0 if Ai,j = 0, and Ei,j is sampled
uniformly from [−0.75,−0.23] ∪ [0.25, 0.75] if Ai,j (cid:54)= 0. Then we set E = E+ET
. Finally we set
Θ = E + (0.1 − Λmin(E))Ip, where Λmin(E) is the smallest eigenvalue of E. ˜Θ is a randomly
generated precision matrix in the same way Θ is generated.
For the robustness parameter β of the robust-LL method, we consider β ∈ {0.005, 0.01, 0.02, 0.03}
n ∈ {90, 85, 80}. Since all the
as recommended in [20]. For the trim-glasso method we consider 100h
robust comparison methods converge to a stationary point, we tested various initialization strategies
for the concentration matrix, including Ip, (S + λIp)−1 and the estimate from glasso. We did not
observe any noticeable impact on the results.
Figure 1 presents the average ROC curves of the comparison methods over 100 simulation data sets
for scenarios M1-M4 as the tuning parameter λ varies. In the ﬁgure, for robust-LL and trim-glasso
methods, we depict the best curves with respect to parameter β and h respectively. Due to space
constraints, the detailed results for all the values of β and h considered, as well as the results for
model M5 are provided in the Supplements [27].
From the ROC curves we can see that our proposed approach is competitive compared the alternative
robust approaches t-lasso, t*-lasso and robust-LL. The edge over glasso is even more pronounced for

2

7

0.00.10.20.30.40.50.10.20.30.40.50.61-specificitysensitivityglassot-lassot*-lassorobust-LL (best)trim-glasso (best)0.00.10.20.30.40.10.20.30.40.50.61-specificitysensitivity0.00.10.20.30.40.50.10.20.30.40.50.60.71-specificitysensitivity0.00.10.20.30.40.50.10.20.30.40.50.60.71-specificitysensitivityFigure 2: (a) Histogram of standardized gene expression levels for gene ORC3. (b) Network esti-
mated by trim-glasso

scenarios M2, M4 and M5. Surprisingly, trim-glasso with h/n = 80% achieves superior sensitivity
for nearly any speciﬁcity.
Computationally the trim-glasso method is also competitive compared to alternatives. The average
run-time over the path of tuning parameters λ is 45.78s for t-lasso, 22.14s for t*-lasso, 11.06s
for robust-LL, 1.58s for trimmed lasso, 1.04s for glasso. Experiments were run on R in a single
computing node with a Intel Core i5 2.5GHz CPU and 8G memory. For t-lasso, t*-lasso and robust-
LL we used the R implementations provided by the methods’ authors. For glasso we used the
glassopath package.

4.2 Application to the analysis of Yeast Gene Expression Data

We analyze a yeast microarray dataset generated by [28]. The dataset concerns n = 112 yeast
segregants (instances). We focused on p = 126 genes (variables) belonging to cell-cycle pathway as
provided by the KEGG database [29]. For each of these genes we standardize the gene expression
data to zero-mean and unit standard deviation. We observed that the expression levels of some genes
are clearly not symmetric about their means and might include outliers. For example the histogram
of gene ORC3 is presented in Figure 2(a). For the robust-LL method we set β = 0.05 and for trim-
glasso we use h/n = 80%. We use 5-fold-CV to choose the tuning parameters for each method.
After λ is chosen for each method, we rerun the methods using the full dataset to obtain the ﬁnal
precision matrix estimates.
Figure 2(b) shows the cell-cycle pathway estimated by our proposed method. For comparison the
cell-cycle pathway from the KEGG [29] is provided in the Supplements [27]. It is important to note
that the KEGG graph corresponds to what is currently known about the pathway. It should not be
treated as the ground truth. Certain discrepancies between KEGG and estimated graphs may also
be caused by inherent limitations in the dataset used for modeling. For instance, some edges in
cell-cycle pathway may not be observable from gene expression data. Additionally, the perturbation
of cellular systems might not be strong enough to enable accurate inference of some of the links.
glasso tends to estimate more links than the robust methods. We postulate that the lack of robustness
might result in inaccurate network reconstruction and the identiﬁcation of spurious links. Robust
methods tend to estimate networks that are more consistent with that from the KEGG (F1-score
of 0.23 for glasso, 0.37 for t*-lasso, 0.39 for robust-NLL and 0.41 for trim-glasso, where the F1
score is the harmonic mean between precision and recall). For instance our approach recovers
several characteristics of the KEGG pathway. For instance, genes CDC6 (a key regulator of DNA
replication playing important roles in the activation and maintenance of the checkpoint mechanisms
coordinating S phase and mitosis) and PDS1 (essential gene for meiotic progression and mitotic cell
cycle arrest) are identiﬁed as a hub genes, while genes CLB3,BRN1,YCG1 are unconnected to any
other genes.

8

rescaled ORC3 gene expressionFrequency-3-2-101202468References
[1] S.L. Lauritzen. Graphical models. Oxford University Press, USA, 1996.
[2] Jung Hun Oh and Joseph O. Deasy. Inference of radio-responsive gene regulatory networks using the

graphical lasso algorithm. BMC Bioinformatics, 15(S-7):S5, 2014.

[3] C. D. Manning and H. Schutze. Foundations of Statistical Natural Language Processing. MIT Press,

1999.

[4] J.W. Woods. Markov image modeling. IEEE Transactions on Automatic Control, 23:846–850, October

1978.

[5] M. Hassner and J. Sklansky. Markov random ﬁeld models of digitized image texture. In ICPR78, pages

538–540, 1978.

[6] G. Cross and A. Jain. Markov random ﬁeld texture models. IEEE Trans. PAMI, 5:25–39, 1983.
[7] E. Ising. Beitrag zur theorie der ferromagnetismus. Zeitschrift f¨ur Physik, 31:253–258, 1925.
[8] B. D. Ripley. Spatial statistics. Wiley, New York, 1981.
[9] E. Yang, A. C. Lozano, and P. Ravikumar. Elementary estimators for graphical models. In Neur. Info.

Proc. Sys. (NIPS), 27, 2014.

[10] M. Yuan and Y. Lin. Model selection and estimation in the Gaussian graphical model. Biometrika, 94(1):

19–35, 2007.

[11] J. Friedman, T. Hastie, and R. Tibshirani. Sparse inverse covariance estimation with the graphical Lasso.

Biostatistics, 2007.

[12] O. Bannerjee, , L. El Ghaoui, and A. d’Aspremont. Model selection through sparse maximum likelihood

estimation for multivariate Gaussian or binary data. Jour. Mach. Lear. Res., 9:485–516, March 2008.

[13] P. Ravikumar, M. J. Wainwright, G. Raskutti, and B. Yu. High-dimensional covariance estimation by
minimizing (cid:96)1-penalized log-determinant divergence. Electronic Journal of Statistics, 5:935–980, 2011.
[14] S. Boyd and L. Vandenberghe. Convex optimization. Cambridge University Press, Cambridge, UK, 2004.
[15] N. Meinshausen and P. B¨uhlmann. High-dimensional graphs and variable selection with the Lasso. Annals

of Statistics, 34:1436–1462, 2006.

[16] E. Yang, P. Ravikumar, G. I. Allen, and Z. Liu. Graphical models via generalized linear models. In Neur.

Info. Proc. Sys. (NIPS), 25, 2012.

[17] R. Tibshirani. Regression shrinkage and selection via the lasso. Journal of the Royal Statistical Society,

Series B, 58(1):267–288, 1996.

[18] Z.J. Daye, J. Chen, and Li H. High-dimensional heteroscedastic regression with an application to eqtl

data analysis. Biometrics, 68:316–326, 2012.

[19] Michael Finegold and Mathias Drton. Robust graphical modeling of gene networks using classical and

alternative t-distributions. The Annals of Applied Statistics, 5(2A):1057–1080, 2011.

[20] H. Sun and H. Li. Robust Gaussian graphical modeling via l1 penalization. Biometrics, 68:1197–206,

2012.

[21] A. Alfons, C. Croux, and S. Gelper. Sparse least trimmed squares regression for analyzing high-

dimensional large data sets. Ann. Appl. Stat., 7:226–248, 2013.

[22] P-L Loh and M. J. Wainwright. Regularized m-estimators with nonconvexity: Statistical and algorithmic

theory for local optima. Arxiv preprint arXiv:1305.2436v2, 2013.

[23] C. J. Hsieh, M. Sustik, I. Dhillon, and P. Ravikumar. Sparse inverse covariance matrix estimation using

quadratic approximation. In Neur. Info. Proc. Sys. (NIPS), 24, 2011.

[24] Y. Nesterov. Gradient methods for minimizing composite objective function. Technical Report 76, Center

for Operations Research and Econometrics (CORE), Catholic Univ. Louvain (UCL)., 2007.

[25] N. H. Nguyen and T. D. Tran. Robust Lasso with missing and grossly corrupted observations.

Trans. Info. Theory, 59(4):2036–2058, 2013.

IEEE

[26] S. Negahban, P. Ravikumar, M. J. Wainwright, and B. Yu. A uniﬁed framework for high-dimensional

analysis of M-estimators with decomposable regularizers. Statistical Science, 27(4):538–557, 2012.

[27] E. Yang and A. C. Lozano. Robust gaussian graphical modeling with the trimmed graphical Lasso.

arXiv:1510.08512, 2015.

[28] Rachel B Brem and Leonid Kruglyak. The landscape of genetic complexity across 5,700 gene expression
traits in yeast. Proceedings of the National Academy of Sciences of the United States of America, 102(5):
1572–1577, 2005.

[29] M. Kanehisa, S. Goto, Y. Sato, M. Kawashima, M. Furumichi, and M. Tanabe. Data, information, knowl-

edge and principle: back to metabolism in kegg. Nucleic Acids Res., 42:D199–D205, 2014.

9

